plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.travelwink'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")

    set('openapiVersion', "2.5.0")
    set('knife4jVersion', "4.5.0")

    set('mybatisVersion', "3.0.3")
    set('mybatisPlusVersion', "3.5.5")

    set('junitVersion', "5.9.3")
    set('jansiVersion', "2.4.0")

    set('lombokVersion', "1.18.32")
}

dependencies {
    /** SPRING WEB FRAMEWORK*/
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'de.codecentric:spring-boot-admin-starter-client:3.2.3'

    /** SPRING CLOUD ROUTING */
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.1'

    /** MESSAGE FRAMEWORK */
    implementation 'org.springframework.kafka:spring-kafka:3.0.11'

    /** DB CONNECTOR */
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.1.3'
    runtimeOnly 'com.mysql:mysql-connector-j'

    /** SQL */
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"
    implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"

    /** API DOC */
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"
    implementation "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:${knife4jVersion}"

    /** CONSOLE LOG PRINT */
    implementation "org.fusesource.jansi:jansi:${jansiVersion}"

    /** UTILS */
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'commons-io:commons-io:2.13.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'

    /** 3rd party SDK */
//implementation...

    /** DEVELOPER TOOLS */
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    /** TEST */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation(platform("org.junit:junit-bom:${junitVersion}"))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}